(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Zcw4:function(n,e,o){"use strict";o.r(e),o.d(e,"GettingStartedModule",(function(){return L}));var r=o("ofXK"),c=o("tyNb"),s=o("3rGN"),t=o("fXoL");function i(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Though this guide is for the Ubuntu linux; it should be easy to retrofit to others. "),t.Ob())}function d(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Though this guide has been tested on macOS High Sierra; it will probably work on older versions. "),t.Ob())}function a(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Follow this guide on Windows 7+. "),t.Ob())}function b(n,e){1&n&&(t.Nb(0),t.rc(1,"Command Prompt (cmd.exe)"),t.Mb())}function l(n,e){1&n&&(t.Nb(0),t.rc(1,"Terminal"),t.Mb())}function p(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,"\n    sudo apt update\n    sudo apt install build-essential git-core tcl\n  "),t.Ob(),t.Ob())}function u(n,e){1&n&&(t.Pb(0,"a",23),t.rc(1,"Latest XCode and Command Line Tools"),t.Ob())}function f(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,'\n    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n    brew update\n    brew install git\n  '),t.Ob(),t.Ob())}function h(n,e){1&n&&(t.Pb(0,"section",24),t.rc(1,' Ensure you check "Add to PATH" whenever asked: '),t.Pb(2,"ol"),t.Pb(3,"li"),t.Pb(4,"a",25),t.rc(5," Build Tools for Visual Studio 2017 "),t.Ob(),t.Ob(),t.Pb(6,"li"),t.Pb(7,"a",26),t.rc(8,"git"),t.Ob(),t.Ob(),t.Ob(),t.Pb(9,"p",9),t.rc(10,"Test that it installed correctly with:"),t.Ob(),t.Pb(11,"pre",10),t.Pb(12,"code",11),t.rc(13,"\n      git --version\n      cl /?\n    "),t.Ob(),t.Ob(),t.Ob())}function P(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,"\n    curl -L https://git.io/n-install | bash -s -- -y lts\n  "),t.Ob(),t.Ob())}function O(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Download and setup from latest: "),t.Pb(2,"a",27),t.rc(3,"'Windows Installer (.msi)' [LTS]"),t.Ob(),t.rc(4,". "),t.Ob())}function g(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,"\n    # Alternatively build from source. Quick guide: https://askubuntu.com/a/868862\n    sudo add-apt-repository ppa:chris-lea/redis-server\n    sudo apt update\n    sudo apt install redis-server\n  "),t.Ob(),t.Ob())}function m(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,"\n    brew install redis\n    brew services start redis\n  "),t.Ob(),t.Ob())}function S(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Download and install the "),t.Pb(2,"a",28),t.rc(3,"latest .msi"),t.Ob(),t.rc(4,". "),t.Ob())}function w(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Follow "),t.Pb(2,"a",29),t.rc(3,"their official guide"),t.Ob(),t.rc(4,". I prefer using latest version from their apt repository. "),t.Ob())}function E(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Follow "),t.Pb(2,"a",30),t.rc(3,"their official guide"),t.Ob(),t.rc(4,". I prefer the "),t.Pb(5,"a",31),t.rc(6,"EnterpriseDB package"),t.Ob(),t.rc(7,". "),t.Ob())}function k(n,e){1&n&&(t.Pb(0,"p",9),t.rc(1," Run this in an Administrator Command Prompt ("),t.Pb(2,"a",32),t.rc(3,"how-to"),t.Ob(),t.rc(4,"): "),t.Ob())}function R(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,'\n    POSTGRES_DB_USER=\'REPLACE_ME\'\n    REST_PASS=\'REPLACE_ME\' # recommend using `read -s REST_PASS`\n    POSTGRES_DB_NAME=\'REPLACE_ME\'\n\n    createuser --superuser "$POSTGRES_DB_USER"\n    psql -c "CREATE USER $POSTGRES_DB_USER WITH LOGIN PASSWORD \'$REST_PASS\';"\n    createdb "$POSTGRES_DB_NAME" --owner "$POSTGRES_DB_USER"\n    export RDBMS_URI="postgres://$POSTGRES_DB_USER:$REST_PASS@localhost/$POSTGRES_DB_NAME"\n    # ^Recommend adding this `export` line to your ~/.bash_profile\n  '),t.Ob(),t.Ob())}function I(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",33),t.rc(2,'\n    set POSTGRES_DB_USER="REPLACE_ME"\n    set REST_PASS="REPLACE_ME"\n    set POSTGRES_DB_NAME="REPLACE_ME"\n\n    createuser --superuser "%POSTGRES_DB_USER%"\n    psql -c "CREATE USER %POSTGRES_DB_USER% WITH LOGIN PASSWORD \'%REST_PASS%\';"\n    createdb "%POSTGRES_DB_NAME%" --owner "%POSTGRES_DB_USER%"\n\n    setx RDBMS_URI "postgres://%POSTGRES_DB_USER%:%REST_PASS%@localhost/%POSTGRES_DB_NAME%"\n    :: This last line will add RDBMS_URI to your environment\n  '),t.Ob(),t.Ob())}function _(n,e){1&n&&(t.Pb(0,"p"),t.rc(1," Alternatively use "),t.Pb(2,"a",34),t.rc(3,"my script"),t.Ob(),t.rc(4,". "),t.Ob())}function T(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,"\n    psql \"$RDBMS_URI\" -c 'SELECT 1'\n  "),t.Ob(),t.Ob())}function y(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2,'\n    psql "%RDBMS_URI%" -c "SELECT 1"\n  '),t.Ob(),t.Ob())}function A(n,e){1&n&&(t.Pb(0,"span"),t.Pb(1,"a",35),t.Pb(2,"code"),t.rc(3,"sed"),t.Ob(),t.Ob(),t.rc(4," and "),t.Ob())}function q(n,e){1&n&&(t.Pb(0,"code"),t.rc(1,"brew install hub"),t.Ob())}function v(n,e){1&n&&(t.Pb(0,"span"),t.Pb(1,"a",36),t.rc(2,"latest package"),t.Ob(),t.rc(3," for your platform."),t.Ob())}function D(n,e){1&n&&(t.Pb(0,"pre",10),t.Pb(1,"code",11),t.rc(2),t.Ob(),t.Ob()),2&n&&(t.zb(2),t.uc('\n    hub create organisation/"$',"{","PWD##*/","}","\" -d 'Description here'\n  "))}var z=[{path:"",component:function(){function n(n){this.platformPickerService=n,this.os=n.is.bind(n)}return n.\u0275fac=function(e){return new(e||n)(t.Kb(s.a))},n.\u0275cmp=t.Eb({type:n,selectors:[["app-getting-started"]],decls:105,vars:29,consts:[[1,"docs-markdown","pad"],[1,"docs-markdown-h5"],["class","docs-markdown-p",4,"ngIf"],[4,"ngIf"],["id","step-0-install-build-dependencies",1,"docs-header-link","docs-markdown-h3"],["class","docs-markdown-pre",4,"ngIf"],["href","https://developer.apple.com/downloads",4,"ngIf"],["class","docs-guide-content",4,"ngIf"],["id","step-1-install-nodejs",1,"docs-header-link","docs-markdown-h3"],[1,"docs-markdown-p"],[1,"docs-markdown-pre"],[1,"lang-bash","docs-markdown-code"],["id","step-2-install-redis",1,"docs-header-link","docs-markdown-h3"],["id","step-3-install-postgres",1,"docs-header-link","docs-markdown-h3"],["id","step-4-install-android",1,"docs-header-link","docs-markdown-h3"],["href","https://developer.android.com/studio/install.html",1,"docs-markdown-a"],["id","step-5-install-global-nodejs-packages",1,"docs-header-link","docs-markdown-h3"],["id","step-6-development-backend",1,"docs-header-link","docs-markdown-h3"],["id","step-7-angular-frontend",1,"docs-header-link","docs-markdown-h3"],["id","step-8-android",1,"docs-header-link","docs-markdown-h3"],["id","step-9-rebranding",1,"docs-header-link","docs-markdown-h3"],["href","https://github.com/sharkdp/fd"],["href","https://hub.github.com"],["href","https://developer.apple.com/downloads"],[1,"docs-guide-content"],["href","https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15",1,"docs-markdown-a"],["href","https://git-scm.com/download/win",1,"docs-markdown-a"],["href","https://nodejs.org/en/download/",1,"docs-markdown-a"],["href","https://github.com/MicrosoftArchive/redis/releases",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/linux/ubuntu/",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/macosx/",1,"docs-markdown-a"],[1,"http://www.enterprisedb.com/products/pgdownload.do#macosx"],["href","https://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx",1,"docs-markdown-a"],[1,"lang-batch","docs-markdown-code"],["href","https://github.com/offscale/offsh-postgres",1,"docs-markdown-a"],["href","https://chocolatey.org/packages/sed"],["href","https://github.com/github/hub/releases"]],template:function(n,e){1&n&&(t.Pb(0,"div",0),t.Pb(1,"h5",1),t.rc(2," This guides you to setting up your computer to run all my scaffolds. "),t.Ob(),t.qc(3,i,2,0,"p",2),t.qc(4,d,2,0,"p",2),t.qc(5,a,2,0,"p",2),t.Pb(6,"em"),t.rc(7," All grey background assumes you are running in an active "),t.qc(8,b,2,0,"ng-container",3),t.qc(9,l,2,0,"ng-container",3),t.rc(10," session "),t.Ob(),t.Pb(11,"h3",4),t.rc(12," Step 0: Install build dependencies "),t.Ob(),t.qc(13,p,3,0,"pre",5),t.qc(14,u,2,0,"a",6),t.qc(15,f,3,0,"pre",5),t.qc(16,h,14,0,"section",7),t.Pb(17,"h3",8),t.rc(18," Step 1: Install Node.js "),t.Ob(),t.qc(19,P,3,0,"pre",5),t.qc(20,O,5,0,"p",2),t.Pb(21,"p",9),t.rc(22,"Test that it installed correctly with:"),t.Ob(),t.Pb(23,"pre",10),t.Pb(24,"code",11),t.rc(25,"\n    node --version\n    npm --version\n  "),t.Ob(),t.Ob(),t.Pb(26,"h3",12),t.rc(27," Step 2: Install Redis "),t.Ob(),t.qc(28,g,3,0,"pre",5),t.qc(29,m,3,0,"pre",5),t.qc(30,S,5,0,"p",2),t.Pb(31,"p",9),t.rc(32,"You can test it's installed and running with:"),t.Ob(),t.Pb(33,"pre",10),t.Pb(34,"code",11),t.rc(35,"\n    redis-cli ping\n  "),t.Ob(),t.Ob(),t.Pb(36,"p",9),t.rc(37,"If that failed, open a new session and run this, then try the ping again:"),t.Ob(),t.Pb(38,"pre",10),t.Pb(39,"code",11),t.rc(40,"\n    redis-server\n  "),t.Ob(),t.Ob(),t.Pb(41,"h3",13),t.rc(42," Step 3: Install and configure Postgres "),t.Ob(),t.qc(43,w,5,0,"p",2),t.qc(44,E,8,0,"p",2),t.qc(45,k,5,0,"p",2),t.qc(46,R,3,0,"pre",5),t.qc(47,I,3,0,"pre",5),t.qc(48,_,5,0,"p",3),t.Pb(49,"p",9),t.rc(50,"You can test it's installed and running with:"),t.Ob(),t.qc(51,T,3,0,"pre",5),t.qc(52,y,3,0,"pre",5),t.Pb(53,"h3",14),t.rc(54," Step 4: Install Android dependencies and IDE "),t.Ob(),t.Pb(55,"p",9),t.rc(56," See "),t.Pb(57,"a",15),t.rc(58,"official install guide"),t.Ob(),t.rc(59,". "),t.Ob(),t.Pb(60,"h3",16),t.rc(61," Step 5: Install global Node.js packages "),t.Ob(),t.Pb(62,"pre",10),t.Pb(63,"code",11),t.rc(64,"\n    npm i -g bunyan typings typescript @angular/cli\n  "),t.Ob(),t.Ob(),t.Pb(65,"h3",17),t.rc(66," Step 6: Development backend (Node.js) "),t.Ob(),t.Pb(67,"pre",10),t.Pb(68,"code",11),t.rc(69,"\n    git clone https://github.com/SamuelMarks/restify-orm-scaffold\n    cd restify-orm-scaffold\n    typings i\n    tsc\n    npm start\n  "),t.Ob(),t.Ob(),t.Pb(70,"h3",18),t.rc(71," Step 7: Angular frontend (web) "),t.Ob(),t.Pb(72,"pre",10),t.Pb(73,"code",11),t.rc(74,"\n    git clone https://github.com/SamuelMarks/ng-material-scaffold\n    cd ng-material-scaffold\n    npm i\n    npm start\n  "),t.Ob(),t.Ob(),t.Pb(75,"h3",19),t.rc(76," Step 8: Android "),t.Ob(),t.Pb(77,"pre",10),t.Pb(78,"code",11),t.rc(79,"\n    git clone https://github.com/SamuelMarks/android-auth-scaffold\n  "),t.Ob(),t.Ob(),t.Pb(80,"p",9),t.rc(81," Now open that in Android Studio; build and run it. "),t.Ob(),t.Pb(82,"h3",20),t.rc(83," Step 9: Branding "),t.Ob(),t.Pb(84,"p",9),t.rc(85,"Now is a good time to rename everything. Close all open windows, and let's begin."),t.Ob(),t.Pb(86,"p",9),t.rc(87,"Install "),t.qc(88,A,5,0,"span",3),t.Pb(89,"a",21),t.Pb(90,"code"),t.rc(91,"fd"),t.Ob(),t.Ob(),t.rc(92,". Then within each of the repo directories, or from a parent directory, run:"),t.Ob(),t.Pb(93,"pre",10),t.Pb(94,"code",11),t.rc(95),t.Ob(),t.Ob(),t.Pb(96,"p",9),t.rc(97,"You will need likely want to update descriptions and add DVCS repositories also. Install "),t.Pb(98,"a",22),t.Pb(99,"code"),t.rc(100,"hub"),t.Ob(),t.Ob(),t.rc(101," with "),t.qc(102,q,2,0,"code",3),t.qc(103,v,4,0,"span",3),t.Ob(),t.qc(104,D,3,2,"pre",5),t.Ob()),2&n&&(t.zb(3),t.ec("ngIf",e.os("Linux")),t.zb(1),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(3),t.ec("ngIf",e.os("Windows")),t.zb(1),t.ec("ngIf",e.os("macOS")||e.os("Linux")),t.zb(4),t.ec("ngIf",e.os("Linux")),t.zb(1),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(3),t.ec("ngIf",e.os("Linux")||e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(8),t.ec("ngIf",e.os("Linux")),t.zb(1),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(13),t.ec("ngIf",e.os("Linux")),t.zb(1),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(1),t.ec("ngIf",e.os("Linux")||e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(1),t.ec("ngIf",e.os("Linux")||e.os("macOS")),t.zb(3),t.ec("ngIf",e.os("Linux")||e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Windows")),t.zb(36),t.ec("ngIf",e.os("Windows")),t.zb(7),t.vc("\n    fd -t f -exec sed -i 's/ng-material-scaffold/projectname/g' ","{}"," \\;\n    fd -t f -exec sed -i 's/NgMaterialScaffold/projectname/g' ","{}"," \\;\n\n    fd -t f -exec sed -i 's/restify-orm-scaffold/projectname/g' ","{}"," \\;\n  "),t.zb(7),t.ec("ngIf",e.os("macOS")),t.zb(1),t.ec("ngIf",e.os("Linux")),t.zb(1),t.ec("ngIf",e.os("Linux")||e.os("macOS")))},directives:[r.j],styles:[".pad[_ngcontent-%COMP%]{padding:0 3em}"]}),n}()}],L=function(){function n(){}return n.\u0275mod=t.Ib({type:n}),n.\u0275inj=t.Hb({factory:function(e){return new(e||n)},imports:[[r.b,c.b,c.b.forChild(z)]]}),n}()}}]);