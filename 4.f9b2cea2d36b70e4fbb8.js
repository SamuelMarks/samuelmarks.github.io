(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{Zcw4:function(n,e,o){"use strict";o.r(e),o.d(e,"GettingStartedModule",function(){return v});var r=o("ofXK"),c=o("tyNb"),s=o("fXoL"),t=o("3rGN");function i(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Though this guide is for the Ubuntu linux; it should be easy to retrofit to others. "),s.Qb())}function a(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Though this guide has been tested on macOS High Sierra; it will probably work on older versions. "),s.Qb())}function d(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Follow this guide on Windows 7+. "),s.Qb())}function b(n,e){1&n&&(s.Pb(0),s.rc(1,"Command Prompt (cmd.exe)"),s.Ob())}function l(n,e){1&n&&(s.Pb(0),s.rc(1,"Terminal"),s.Ob())}function p(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,"\n    sudo apt update\n    sudo apt install build-essential git-core tcl\n  "),s.Qb(),s.Qb())}function u(n,e){1&n&&(s.Rb(0,"a",23),s.rc(1,"Latest XCode and Command Line Tools"),s.Qb())}function R(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,'\n    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n    brew update\n    brew install git\n  '),s.Qb(),s.Qb())}function g(n,e){1&n&&(s.Rb(0,"section",24),s.rc(1,' Ensure you check "Add to PATH" whenever asked: '),s.Rb(2,"ol"),s.Rb(3,"li"),s.Rb(4,"a",25),s.rc(5," Build Tools for Visual Studio 2017 "),s.Qb(),s.Qb(),s.Rb(6,"li"),s.Rb(7,"a",26),s.rc(8,"git"),s.Qb(),s.Qb(),s.Qb(),s.Rb(9,"p",9),s.rc(10,"Test that it installed correctly with:"),s.Qb(),s.Rb(11,"pre",10),s.Rb(12,"code",11),s.rc(13,"\n      git --version\n      cl /?\n    "),s.Qb(),s.Qb(),s.Qb())}function h(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,"\n    curl -L https://git.io/n-install | bash -s -- -y lts\n  "),s.Qb(),s.Qb())}function f(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Download and setup from latest: "),s.Rb(2,"a",27),s.rc(3,"'Windows Installer (.msi)' [LTS]"),s.Qb(),s.rc(4,". "),s.Qb())}function m(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,"\n    # Alternatively build from source. Quick guide: https://askubuntu.com/a/868862\n    sudo add-apt-repository ppa:chris-lea/redis-server\n    sudo apt update\n    sudo apt install redis-server\n  "),s.Qb(),s.Qb())}function S(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,"\n    brew install redis\n    brew services start redis\n  "),s.Qb(),s.Qb())}function w(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Download and install the "),s.Rb(2,"a",28),s.rc(3,"latest .msi"),s.Qb(),s.rc(4,". "),s.Qb())}function Q(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Follow "),s.Rb(2,"a",29),s.rc(3,"their official guide"),s.Qb(),s.rc(4,". I prefer using latest version from their apt repository. "),s.Qb())}function E(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Follow "),s.Rb(2,"a",30),s.rc(3,"their official guide"),s.Qb(),s.rc(4,". I prefer the "),s.Rb(5,"a",31),s.rc(6,"EnterpriseDB package"),s.Qb(),s.rc(7,". "),s.Qb())}function k(n,e){1&n&&(s.Rb(0,"p",9),s.rc(1," Run this in an Administrator Command Prompt ("),s.Rb(2,"a",32),s.rc(3,"how-to"),s.Qb(),s.rc(4,"): "),s.Qb())}function B(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,'\n    POSTGRES_DB_USER=\'REPLACE_ME\'\n    REST_PASS=\'REPLACE_ME\' # recommend using `read -s REST_PASS`\n    POSTGRES_DB_NAME=\'REPLACE_ME\'\n\n    createuser --superuser "$POSTGRES_DB_USER"\n    psql -c "CREATE USER $POSTGRES_DB_USER WITH LOGIN PASSWORD \'$REST_PASS\';"\n    createdb "$POSTGRES_DB_NAME" --owner "$POSTGRES_DB_USER"\n    export RDBMS_URI="postgres://$POSTGRES_DB_USER:$REST_PASS@localhost/$POSTGRES_DB_NAME"\n    # ^Recommend adding this `export` line to your ~/.bash_profile\n  '),s.Qb(),s.Qb())}function I(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",33),s.rc(2,'\n    set POSTGRES_DB_USER="REPLACE_ME"\n    set REST_PASS="REPLACE_ME"\n    set POSTGRES_DB_NAME="REPLACE_ME"\n\n    createuser --superuser "%POSTGRES_DB_USER%"\n    psql -c "CREATE USER %POSTGRES_DB_USER% WITH LOGIN PASSWORD \'%REST_PASS%\';"\n    createdb "%POSTGRES_DB_NAME%" --owner "%POSTGRES_DB_USER%"\n\n    setx RDBMS_URI "postgres://%POSTGRES_DB_USER%:%REST_PASS%@localhost/%POSTGRES_DB_NAME%"\n    :: This last line will add RDBMS_URI to your environment\n  '),s.Qb(),s.Qb())}function _(n,e){1&n&&(s.Rb(0,"p"),s.rc(1," Alternatively use "),s.Rb(2,"a",34),s.rc(3,"my script"),s.Qb(),s.rc(4,". "),s.Qb())}function T(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,"\n    psql \"$RDBMS_URI\" -c 'SELECT 1'\n  "),s.Qb(),s.Qb())}function P(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2,'\n    psql "%RDBMS_URI%" -c "SELECT 1"\n  '),s.Qb(),s.Qb())}function y(n,e){1&n&&(s.Rb(0,"span"),s.Rb(1,"a",35),s.Rb(2,"code"),s.rc(3,"sed"),s.Qb(),s.Qb(),s.rc(4," and "),s.Qb())}function O(n,e){1&n&&(s.Rb(0,"code"),s.rc(1,"brew install hub"),s.Qb())}function A(n,e){1&n&&(s.Rb(0,"span"),s.Rb(1,"a",36),s.rc(2,"latest package"),s.Qb(),s.rc(3," for your platform."),s.Qb())}function q(n,e){1&n&&(s.Rb(0,"pre",10),s.Rb(1,"code",11),s.rc(2),s.Qb(),s.Qb()),2&n&&(s.Bb(2),s.uc('\n    hub create organisation/"$',"{","PWD##*/","}","\" -d 'Description here'\n  "))}const D=[{path:"",component:(()=>{class n{constructor(n){this.platformPickerService=n,this.os=n.is.bind(n)}}return n.\u0275fac=function(e){return new(e||n)(s.Mb(t.a))},n.\u0275cmp=s.Gb({type:n,selectors:[["app-getting-started"]],decls:105,vars:29,consts:[[1,"docs-markdown","pad"],[1,"docs-markdown-h5"],["class","docs-markdown-p",4,"ngIf"],[4,"ngIf"],["id","step-0-install-build-dependencies",1,"docs-header-link","docs-markdown-h3"],["class","docs-markdown-pre",4,"ngIf"],["href","https://developer.apple.com/downloads",4,"ngIf"],["class","docs-guide-content",4,"ngIf"],["id","step-1-install-nodejs",1,"docs-header-link","docs-markdown-h3"],[1,"docs-markdown-p"],[1,"docs-markdown-pre"],[1,"lang-bash","docs-markdown-code"],["id","step-2-install-redis",1,"docs-header-link","docs-markdown-h3"],["id","step-3-install-postgres",1,"docs-header-link","docs-markdown-h3"],["id","step-4-install-android",1,"docs-header-link","docs-markdown-h3"],["href","https://developer.android.com/studio/install.html",1,"docs-markdown-a"],["id","step-5-install-global-nodejs-packages",1,"docs-header-link","docs-markdown-h3"],["id","step-6-development-backend",1,"docs-header-link","docs-markdown-h3"],["id","step-7-angular-frontend",1,"docs-header-link","docs-markdown-h3"],["id","step-8-android",1,"docs-header-link","docs-markdown-h3"],["id","step-9-rebranding",1,"docs-header-link","docs-markdown-h3"],["href","https://github.com/sharkdp/fd"],["href","https://hub.github.com"],["href","https://developer.apple.com/downloads"],[1,"docs-guide-content"],["href","https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15",1,"docs-markdown-a"],["href","https://git-scm.com/download/win",1,"docs-markdown-a"],["href","https://nodejs.org/en/download/",1,"docs-markdown-a"],["href","https://github.com/MicrosoftArchive/redis/releases",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/linux/ubuntu/",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/macosx/",1,"docs-markdown-a"],[1,"http://www.enterprisedb.com/products/pgdownload.do#macosx"],["href","https://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx",1,"docs-markdown-a"],[1,"lang-batch","docs-markdown-code"],["href","https://github.com/offscale/offsh-postgres",1,"docs-markdown-a"],["href","https://chocolatey.org/packages/sed"],["href","https://github.com/github/hub/releases"]],template:function(n,e){1&n&&(s.Rb(0,"div",0),s.Rb(1,"h5",1),s.rc(2," This guides you to setting up your computer to run all my scaffolds. "),s.Qb(),s.qc(3,i,2,0,"p",2),s.qc(4,a,2,0,"p",2),s.qc(5,d,2,0,"p",2),s.Rb(6,"em"),s.rc(7," All grey background assumes you are running in an active "),s.qc(8,b,2,0,"ng-container",3),s.qc(9,l,2,0,"ng-container",3),s.rc(10," session "),s.Qb(),s.Rb(11,"h3",4),s.rc(12," Step 0: Install build dependencies "),s.Qb(),s.qc(13,p,3,0,"pre",5),s.qc(14,u,2,0,"a",6),s.qc(15,R,3,0,"pre",5),s.qc(16,g,14,0,"section",7),s.Rb(17,"h3",8),s.rc(18," Step 1: Install Node.js "),s.Qb(),s.qc(19,h,3,0,"pre",5),s.qc(20,f,5,0,"p",2),s.Rb(21,"p",9),s.rc(22,"Test that it installed correctly with:"),s.Qb(),s.Rb(23,"pre",10),s.Rb(24,"code",11),s.rc(25,"\n    node --version\n    npm --version\n  "),s.Qb(),s.Qb(),s.Rb(26,"h3",12),s.rc(27," Step 2: Install Redis "),s.Qb(),s.qc(28,m,3,0,"pre",5),s.qc(29,S,3,0,"pre",5),s.qc(30,w,5,0,"p",2),s.Rb(31,"p",9),s.rc(32,"You can test it's installed and running with:"),s.Qb(),s.Rb(33,"pre",10),s.Rb(34,"code",11),s.rc(35,"\n    redis-cli ping\n  "),s.Qb(),s.Qb(),s.Rb(36,"p",9),s.rc(37,"If that failed, open a new session and run this, then try the ping again:"),s.Qb(),s.Rb(38,"pre",10),s.Rb(39,"code",11),s.rc(40,"\n    redis-server\n  "),s.Qb(),s.Qb(),s.Rb(41,"h3",13),s.rc(42," Step 3: Install and configure Postgres "),s.Qb(),s.qc(43,Q,5,0,"p",2),s.qc(44,E,8,0,"p",2),s.qc(45,k,5,0,"p",2),s.qc(46,B,3,0,"pre",5),s.qc(47,I,3,0,"pre",5),s.qc(48,_,5,0,"p",3),s.Rb(49,"p",9),s.rc(50,"You can test it's installed and running with:"),s.Qb(),s.qc(51,T,3,0,"pre",5),s.qc(52,P,3,0,"pre",5),s.Rb(53,"h3",14),s.rc(54," Step 4: Install Android dependencies and IDE "),s.Qb(),s.Rb(55,"p",9),s.rc(56," See "),s.Rb(57,"a",15),s.rc(58,"official install guide"),s.Qb(),s.rc(59,". "),s.Qb(),s.Rb(60,"h3",16),s.rc(61," Step 5: Install global Node.js packages "),s.Qb(),s.Rb(62,"pre",10),s.Rb(63,"code",11),s.rc(64,"\n    npm i -g bunyan typings typescript @angular/cli\n  "),s.Qb(),s.Qb(),s.Rb(65,"h3",17),s.rc(66," Step 6: Development backend (Node.js) "),s.Qb(),s.Rb(67,"pre",10),s.Rb(68,"code",11),s.rc(69,"\n    git clone https://github.com/SamuelMarks/restify-orm-scaffold\n    cd restify-orm-scaffold\n    typings i\n    tsc\n    npm start\n  "),s.Qb(),s.Qb(),s.Rb(70,"h3",18),s.rc(71," Step 7: Angular frontend (web) "),s.Qb(),s.Rb(72,"pre",10),s.Rb(73,"code",11),s.rc(74,"\n    git clone https://github.com/SamuelMarks/ng-material-scaffold\n    cd ng-material-scaffold\n    npm i\n    npm start\n  "),s.Qb(),s.Qb(),s.Rb(75,"h3",19),s.rc(76," Step 8: Android "),s.Qb(),s.Rb(77,"pre",10),s.Rb(78,"code",11),s.rc(79,"\n    git clone https://github.com/SamuelMarks/android-auth-scaffold\n  "),s.Qb(),s.Qb(),s.Rb(80,"p",9),s.rc(81," Now open that in Android Studio; build and run it. "),s.Qb(),s.Rb(82,"h3",20),s.rc(83," Step 9: Branding "),s.Qb(),s.Rb(84,"p",9),s.rc(85,"Now is a good time to rename everything. Close all open windows, and let's begin."),s.Qb(),s.Rb(86,"p",9),s.rc(87,"Install "),s.qc(88,y,5,0,"span",3),s.Rb(89,"a",21),s.Rb(90,"code"),s.rc(91,"fd"),s.Qb(),s.Qb(),s.rc(92,". Then within each of the repo directories, or from a parent directory, run:"),s.Qb(),s.Rb(93,"pre",10),s.Rb(94,"code",11),s.rc(95),s.Qb(),s.Qb(),s.Rb(96,"p",9),s.rc(97,"You will need likely want to update descriptions and add DVCS repositories also. Install "),s.Rb(98,"a",22),s.Rb(99,"code"),s.rc(100,"hub"),s.Qb(),s.Qb(),s.rc(101," with "),s.qc(102,O,2,0,"code",3),s.qc(103,A,4,0,"span",3),s.Qb(),s.qc(104,q,3,2,"pre",5),s.Qb()),2&n&&(s.Bb(3),s.gc("ngIf",e.os("Linux")),s.Bb(1),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(3),s.gc("ngIf",e.os("Windows")),s.Bb(1),s.gc("ngIf",e.os("macOS")||e.os("Linux")),s.Bb(4),s.gc("ngIf",e.os("Linux")),s.Bb(1),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(3),s.gc("ngIf",e.os("Linux")||e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(8),s.gc("ngIf",e.os("Linux")),s.Bb(1),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(13),s.gc("ngIf",e.os("Linux")),s.Bb(1),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(1),s.gc("ngIf",e.os("Linux")||e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(1),s.gc("ngIf",e.os("Linux")||e.os("macOS")),s.Bb(3),s.gc("ngIf",e.os("Linux")||e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Windows")),s.Bb(36),s.gc("ngIf",e.os("Windows")),s.Bb(7),s.vc("\n    fd -t f -exec sed -i 's/ng-material-scaffold/projectname/g' ","{}"," \\;\n    fd -t f -exec sed -i 's/NgMaterialScaffold/projectname/g' ","{}"," \\;\n\n    fd -t f -exec sed -i 's/restify-orm-scaffold/projectname/g' ","{}"," \\;\n  "),s.Bb(7),s.gc("ngIf",e.os("macOS")),s.Bb(1),s.gc("ngIf",e.os("Linux")),s.Bb(1),s.gc("ngIf",e.os("Linux")||e.os("macOS")))},directives:[r.j],styles:[".pad[_ngcontent-%COMP%]{padding:0 3em}"]}),n})()}];let v=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=s.Kb({type:n}),n.\u0275inj=s.Jb({imports:[[r.b,c.b,c.b.forChild(D)]]}),n})()}}]);