"use strict";(self.webpackChunksamuelmarks_github_io=self.webpackChunksamuelmarks_github_io||[]).push([[370],{2370:(L,d,i)=>{i.r(d),i.d(d,{GettingStartedModule:()=>B});var l=i(6814),r=i(3403),t=i(9212),u=i(1097);function p(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Though this guide is for the Ubuntu linux; it should be easy to retrofit to others. "),t.qZA())}function c(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Though this guide has been tested on macOS High Sierra; it will probably work on older versions. "),t.qZA())}function _(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Follow this guide on Windows 7+. "),t.qZA())}function m(e,o){1&e&&t._uU(0," Command Prompt (cmd.exe) ")}function g(e,o){1&e&&t._uU(0," Terminal ")}function h(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,"\n    sudo apt update\n    sudo apt install build-essential git-core tcl\n  "),t.qZA()())}function S(e,o){1&e&&(t.TgZ(0,"a",20),t._uU(1,"Latest XCode and Command Line Tools"),t.qZA(),t.TgZ(2,"pre",7)(3,"code",8),t._uU(4,'\n    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n    brew update\n    brew install git\n  '),t.qZA()())}function Z(e,o){1&e&&(t.TgZ(0,"section",21),t._uU(1,' Ensure you check "Add to PATH" whenever asked: '),t.TgZ(2,"ol")(3,"li")(4,"a",22),t._uU(5," Build Tools for Visual Studio 2017 "),t.qZA()(),t.TgZ(6,"li")(7,"a",23),t._uU(8,"git"),t.qZA()()(),t.TgZ(9,"p",6),t._uU(10,"Test that it installed correctly with:"),t.qZA(),t.TgZ(11,"pre",7)(12,"code",8),t._uU(13,"\n      git --version\n      cl /?\n    "),t.qZA()()())}function T(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,"\n    curl -L https://git.io/n-install | bash -s -- -y lts\n  "),t.qZA()())}function f(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Download and setup from latest: "),t.TgZ(2,"a",24),t._uU(3,"'Windows Installer (.msi)' [LTS]"),t.qZA(),t._uU(4,". "),t.qZA())}function A(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,"\n    # Alternatively build from source. Quick guide: https://askubuntu.com/a/868862\n    sudo add-apt-repository ppa:chris-lea/redis-server\n    sudo apt update\n    sudo apt install redis-server\n  "),t.qZA()())}function U(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,"\n    brew install redis\n    brew services start redis\n  "),t.qZA()())}function w(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Download and install the "),t.TgZ(2,"a",25),t._uU(3,"latest .msi"),t.qZA(),t._uU(4,". "),t.qZA())}function C(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Follow "),t.TgZ(2,"a",26),t._uU(3,"their official guide"),t.qZA(),t._uU(4,". I prefer using latest version from their apt repository. "),t.qZA())}function q(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Follow "),t.TgZ(2,"a",27),t._uU(3,"their official guide"),t.qZA(),t._uU(4,". I prefer the "),t.TgZ(5,"a",28),t._uU(6,"EnterpriseDB package"),t.qZA(),t._uU(7,". "),t.qZA())}function E(e,o){1&e&&(t.TgZ(0,"p",6),t._uU(1," Run this in an Administrator Command Prompt ("),t.TgZ(2,"a",29),t._uU(3,"how-to"),t.qZA(),t._uU(4,"): "),t.qZA())}function R(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,'\n    POSTGRES_DB_USER=\'REPLACE_ME\'\n    REST_PASS=\'REPLACE_ME\' # recommend using `read -s REST_PASS`\n    POSTGRES_DB_NAME=\'REPLACE_ME\'\n\n    createuser --superuser "$POSTGRES_DB_USER"\n    psql -c "CREATE USER $POSTGRES_DB_USER WITH LOGIN PASSWORD \'$REST_PASS\';"\n    createdb "$POSTGRES_DB_NAME" --owner "$POSTGRES_DB_USER"\n    export RDBMS_URI="postgres://$POSTGRES_DB_USER:$REST_PASS@localhost/$POSTGRES_DB_NAME"\n    # ^Recommend adding this `export` line to your ~/.bash_profile\n  '),t.qZA()())}function k(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",30),t._uU(2,'\n    set POSTGRES_DB_USER="REPLACE_ME"\n    set REST_PASS="REPLACE_ME"\n    set POSTGRES_DB_NAME="REPLACE_ME"\n\n    createuser --superuser "%POSTGRES_DB_USER%"\n    psql -c "CREATE USER %POSTGRES_DB_USER% WITH LOGIN PASSWORD \'%REST_PASS%\';"\n    createdb "%POSTGRES_DB_NAME%" --owner "%POSTGRES_DB_USER%"\n\n    setx RDBMS_URI "postgres://%POSTGRES_DB_USER%:%REST_PASS%@localhost/%POSTGRES_DB_NAME%"\n    :: This last line will add RDBMS_URI to your environment\n  '),t.qZA()())}function b(e,o){1&e&&(t.TgZ(0,"p"),t._uU(1," Alternatively use "),t.TgZ(2,"a",31),t._uU(3,"my script"),t.qZA(),t._uU(4,". "),t.qZA())}function G(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,"\n    psql \"$RDBMS_URI\" -c 'SELECT 1'\n  "),t.qZA()())}function y(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2,'\n    psql "%RDBMS_URI%" -c "SELECT 1"\n  '),t.qZA()())}function P(e,o){1&e&&(t.TgZ(0,"span")(1,"a",32)(2,"code"),t._uU(3,"sed"),t.qZA()(),t._uU(4," and "),t.qZA())}function O(e,o){1&e&&(t.TgZ(0,"code"),t._uU(1,"brew install hub"),t.qZA())}function x(e,o){1&e&&(t.TgZ(0,"span")(1,"a",33),t._uU(2,"latest package"),t.qZA(),t._uU(3," for your platform."),t.qZA())}function D(e,o){1&e&&(t.TgZ(0,"pre",7)(1,"code",8),t._uU(2),t.qZA()()),2&e&&(t.xp6(2),t.AsE('\n    hub create organisation/"$',"{","PWD##*/","}","\" -d 'Description here'\n  "))}const v=[{path:"",component:(()=>{class e{constructor(s){this.platformPickerService=s,this.os=s.is.bind(s)}static#t=this.\u0275fac=function(a){return new(a||e)(t.Y36(u.P))};static#e=this.\u0275cmp=t.Xpm({type:e,selectors:[["app-getting-started"]],decls:104,vars:15,consts:[[1,"docs-markdown","pad"],[1,"docs-markdown-h5"],["class","docs-markdown-p"],["id","step-0-install-build-dependencies",1,"docs-header-link","docs-markdown-h3"],["class","docs-markdown-pre"],["id","step-1-install-nodejs",1,"docs-header-link","docs-markdown-h3"],[1,"docs-markdown-p"],[1,"docs-markdown-pre"],[1,"lang-bash","docs-markdown-code"],["id","step-2-install-redis",1,"docs-header-link","docs-markdown-h3"],["id","step-3-install-postgres",1,"docs-header-link","docs-markdown-h3"],["id","step-4-install-android",1,"docs-header-link","docs-markdown-h3"],["href","https://developer.android.com/studio/install.html",1,"docs-markdown-a"],["id","step-5-install-global-nodejs-packages",1,"docs-header-link","docs-markdown-h3"],["id","step-6-development-backend",1,"docs-header-link","docs-markdown-h3"],["id","step-7-angular-frontend",1,"docs-header-link","docs-markdown-h3"],["id","step-8-android",1,"docs-header-link","docs-markdown-h3"],["id","step-9-rebranding",1,"docs-header-link","docs-markdown-h3"],["href","https://github.com/sharkdp/fd"],["href","https://hub.github.com"],["href","https://developer.apple.com/downloads"],[1,"docs-guide-content"],["href","https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15",1,"docs-markdown-a"],["href","https://git-scm.com/download/win",1,"docs-markdown-a"],["href","https://nodejs.org/en/download/",1,"docs-markdown-a"],["href","https://github.com/MicrosoftArchive/redis/releases",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/linux/ubuntu/",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/macosx/",1,"docs-markdown-a"],[1,"http://www.enterprisedb.com/products/pgdownload.do#macosx"],["href","https://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx",1,"docs-markdown-a"],[1,"lang-batch","docs-markdown-code"],["href","https://github.com/offscale/offsh-postgres",1,"docs-markdown-a"],["href","https://chocolatey.org/packages/sed"],["href","https://github.com/github/hub/releases"]],template:function(a,n){1&a&&(t.TgZ(0,"div",0)(1,"h5",1),t._uU(2," This guides you to setting up your computer to run all my scaffolds. "),t.qZA(),t.YNc(3,p,2,0,"p",2)(4,c,2,0)(5,_,2,0),t.TgZ(6,"em"),t._uU(7," All grey background assumes you are running in an active "),t.YNc(8,m,1,0)(9,g,1,0),t._uU(10," session "),t.qZA(),t.TgZ(11,"h3",3),t._uU(12," Step 0: Install build dependencies "),t.qZA(),t.YNc(13,h,3,0,"pre",4)(14,S,5,0)(15,Z,14,0),t.TgZ(16,"h3",5),t._uU(17," Step 1: Install Node.js "),t.qZA(),t.YNc(18,T,3,0,"pre",4)(19,f,5,0),t.TgZ(20,"p",6),t._uU(21,"Test that it installed correctly with:"),t.qZA(),t.TgZ(22,"pre",7)(23,"code",8),t._uU(24,"\n    node --version\n    npm --version\n  "),t.qZA()(),t.TgZ(25,"h3",9),t._uU(26," Step 2: Install Redis "),t.qZA(),t.YNc(27,A,3,0,"pre",4)(28,U,3,0)(29,w,5,0),t.TgZ(30,"p",6),t._uU(31,"You can test it's installed and running with:"),t.qZA(),t.TgZ(32,"pre",7)(33,"code",8),t._uU(34,"\n    redis-cli ping\n  "),t.qZA()(),t.TgZ(35,"p",6),t._uU(36,"If that failed, open a new session and run this, then try the ping again:"),t.qZA(),t.TgZ(37,"pre",7)(38,"code",8),t._uU(39,"\n    redis-server\n  "),t.qZA()(),t.TgZ(40,"h3",10),t._uU(41," Step 3: Install and configure Postgres "),t.qZA(),t.YNc(42,C,5,0,"p",2)(43,q,8,0)(44,E,5,0)(45,R,3,0,"pre",4)(46,k,3,0)(47,b,5,0,"p"),t.TgZ(48,"p",6),t._uU(49,"You can test it's installed and running with:"),t.qZA(),t.YNc(50,G,3,0,"pre",4)(51,y,3,0),t.TgZ(52,"h3",11),t._uU(53," Step 4: Install Android dependencies and IDE "),t.qZA(),t.TgZ(54,"p",6),t._uU(55," See "),t.TgZ(56,"a",12),t._uU(57,"official install guide"),t.qZA(),t._uU(58,". "),t.qZA(),t.TgZ(59,"h3",13),t._uU(60," Step 5: Install global Node.js packages "),t.qZA(),t.TgZ(61,"pre",7)(62,"code",8),t._uU(63,"\n    npm i -g bunyan typings typescript @angular/cli\n  "),t.qZA()(),t.TgZ(64,"h3",14),t._uU(65," Step 6: Development backend (Node.js) "),t.qZA(),t.TgZ(66,"pre",7)(67,"code",8),t._uU(68,"\n    git clone https://github.com/SamuelMarks/restify-orm-scaffold\n    cd restify-orm-scaffold\n    typings i\n    tsc\n    npm start\n  "),t.qZA()(),t.TgZ(69,"h3",15),t._uU(70," Step 7: Angular frontend (web) "),t.qZA(),t.TgZ(71,"pre",7)(72,"code",8),t._uU(73,"\n    git clone https://github.com/SamuelMarks/ng-material-scaffold\n    cd ng-material-scaffold\n    npm i\n    npm start\n  "),t.qZA()(),t.TgZ(74,"h3",16),t._uU(75," Step 8: Android "),t.qZA(),t.TgZ(76,"pre",7)(77,"code",8),t._uU(78,"\n    git clone https://github.com/SamuelMarks/android-auth-scaffold\n  "),t.qZA()(),t.TgZ(79,"p",6),t._uU(80," Now open that in Android Studio; build and run it. "),t.qZA(),t.TgZ(81,"h3",17),t._uU(82," Step 9: Branding "),t.qZA(),t.TgZ(83,"p",6),t._uU(84,"Now is a good time to rename everything. Close all open windows, and let's begin."),t.qZA(),t.TgZ(85,"p",6),t._uU(86,"Install "),t.YNc(87,P,5,0,"span"),t.TgZ(88,"a",18)(89,"code"),t._uU(90,"fd"),t.qZA()(),t._uU(91,". Then within each of the repo directories, or from a parent directory, run:"),t.qZA(),t.TgZ(92,"pre",7)(93,"code",8),t._uU(94),t.qZA()(),t.TgZ(95,"p",6),t._uU(96,"You will need likely want to update descriptions and add DVCS repositories also. Install "),t.TgZ(97,"a",19)(98,"code"),t._uU(99,"hub"),t.qZA()(),t._uU(100," with "),t.YNc(101,O,2,0,"code")(102,x,4,0),t.qZA(),t.YNc(103,D,3,2,"pre",4),t.qZA()),2&a&&(t.xp6(3),t.um2(3,n.os("Linux")?3:n.os("macOS")?4:n.os("Windows")?5:-1),t.xp6(5),t.um2(8,n.os("Windows")?8:n.os("macOS")||n.os("Linux")?9:-1),t.xp6(5),t.um2(13,n.os("Linux")?13:n.os("macOS")?14:n.os("Windows")?15:-1),t.xp6(5),t.um2(18,n.os("Linux")||n.os("macOS")?18:n.os("Windows")?19:-1),t.xp6(9),t.um2(27,n.os("Linux")?27:n.os("macOS")?28:n.os("Windows")?29:-1),t.xp6(15),t.um2(42,n.os("Linux")?42:n.os("macOS")?43:n.os("Windows")?44:-1),t.xp6(3),t.um2(45,n.os("Linux")||n.os("macOS")?45:n.os("Windows")?46:-1),t.xp6(2),t.um2(47,n.os("Linux")||n.os("macOS")?47:-1),t.xp6(3),t.um2(50,n.os("Linux")||n.os("macOS")?50:n.os("Windows")?51:-1),t.xp6(37),t.um2(87,n.os("Windows")?87:-1),t.xp6(7),t.lnq("\n    fd -t f -exec sed -i 's/ng-material-scaffold/projectname/g' ","{}"," \\;\n    fd -t f -exec sed -i 's/NgMaterialScaffold/projectname/g' ","{}"," \\;\n\n    fd -t f -exec sed -i 's/restify-orm-scaffold/projectname/g' ","{}"," \\;\n  "),t.xp6(7),t.um2(101,n.os("macOS")?101:n.os("Linux")?102:-1),t.xp6(2),t.um2(103,n.os("Linux")||n.os("macOS")?103:-1))},styles:[".pad[_ngcontent-%COMP%]{padding:0 3em}"]})}return e})()}];let B=(()=>{class e{static#t=this.\u0275fac=function(a){return new(a||e)};static#e=this.\u0275mod=t.oAB({type:e});static#n=this.\u0275inj=t.cJS({imports:[l.ez,r.Bz,r.Bz.forChild(v)]})}return e})()}}]);