"use strict";(self.webpackChunksamuelmarks_github_io=self.webpackChunksamuelmarks_github_io||[]).push([[880],{1880:(L,d,s)=>{s.r(d),s.d(d,{GettingStartedModule:()=>B});var l=s(177),r=s(7062),t=s(4438),p=s(400);function c(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Though this guide is for the Ubuntu linux; it should be easy to retrofit to others. "),t.k0s())}function m(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Though this guide has been tested on macOS High Sierra; it will probably work on older versions. "),t.k0s())}function F(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Follow this guide on Windows 7+. "),t.k0s())}function u(e,o){1&e&&t.EFF(0," Command Prompt (cmd.exe) ")}function E(e,o){1&e&&t.EFF(0," Terminal ")}function h(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,"\n    sudo apt update\n    sudo apt install build-essential git-core tcl\n  "),t.k0s()())}function S(e,o){1&e&&(t.j41(0,"a",18),t.EFF(1,"Latest XCode and Command Line Tools"),t.k0s(),t.j41(2,"pre",4)(3,"code",6),t.EFF(4,'\n    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n    brew update\n    brew install git\n  '),t.k0s()())}function f(e,o){1&e&&(t.j41(0,"section",19),t.EFF(1,' Ensure you check "Add to PATH" whenever asked: '),t.j41(2,"ol")(3,"li")(4,"a",20),t.EFF(5," Build Tools for Visual Studio 2017 "),t.k0s()(),t.j41(6,"li")(7,"a",21),t.EFF(8,"git"),t.k0s()()(),t.j41(9,"p",2),t.EFF(10,"Test that it installed correctly with:"),t.k0s(),t.j41(11,"pre",4)(12,"code",6),t.EFF(13,"\n      git --version\n      cl /?\n    "),t.k0s()()())}function k(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,"\n    curl -L https://git.io/n-install | bash -s -- -y lts\n  "),t.k0s()())}function g(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Download and setup from latest: "),t.j41(2,"a",22),t.EFF(3,"'Windows Installer (.msi)' [LTS]"),t.k0s(),t.EFF(4,". "),t.k0s())}function _(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,"\n    # Alternatively build from source. Quick guide: https://askubuntu.com/a/868862\n    sudo add-apt-repository ppa:chris-lea/redis-server\n    sudo apt update\n    sudo apt install redis-server\n  "),t.k0s()())}function w(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,"\n    brew install redis\n    brew services start redis\n  "),t.k0s()())}function j(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Download and install the "),t.j41(2,"a",23),t.EFF(3,"latest .msi"),t.k0s(),t.EFF(4,". "),t.k0s())}function C(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Follow "),t.j41(2,"a",24),t.EFF(3,"their official guide"),t.k0s(),t.EFF(4,". I prefer using latest version from their apt repository. "),t.k0s())}function R(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Follow "),t.j41(2,"a",25),t.EFF(3,"their official guide"),t.k0s(),t.EFF(4,". I prefer the "),t.j41(5,"a",26),t.EFF(6,"EnterpriseDB package"),t.k0s(),t.EFF(7,". "),t.k0s())}function T(e,o){1&e&&(t.j41(0,"p",2),t.EFF(1," Run this in an Administrator Command Prompt ("),t.j41(2,"a",27),t.EFF(3,"how-to"),t.k0s(),t.EFF(4,"): "),t.k0s())}function b(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,'\n    POSTGRES_DB_USER=\'REPLACE_ME\'\n    REST_PASS=\'REPLACE_ME\' # recommend using `read -s REST_PASS`\n    POSTGRES_DB_NAME=\'REPLACE_ME\'\n\n    createuser --superuser "$POSTGRES_DB_USER"\n    psql -c "CREATE USER $POSTGRES_DB_USER WITH LOGIN PASSWORD \'$REST_PASS\';"\n    createdb "$POSTGRES_DB_NAME" --owner "$POSTGRES_DB_USER"\n    export RDBMS_URI="postgres://$POSTGRES_DB_USER:$REST_PASS@localhost/$POSTGRES_DB_NAME"\n    # ^Recommend adding this `export` line to your ~/.bash_profile\n  '),t.k0s()())}function G(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",28),t.EFF(2,'\n    set POSTGRES_DB_USER="REPLACE_ME"\n    set REST_PASS="REPLACE_ME"\n    set POSTGRES_DB_NAME="REPLACE_ME"\n\n    createuser --superuser "%POSTGRES_DB_USER%"\n    psql -c "CREATE USER %POSTGRES_DB_USER% WITH LOGIN PASSWORD \'%REST_PASS%\';"\n    createdb "%POSTGRES_DB_NAME%" --owner "%POSTGRES_DB_USER%"\n\n    setx RDBMS_URI "postgres://%POSTGRES_DB_USER%:%REST_PASS%@localhost/%POSTGRES_DB_NAME%"\n    :: This last line will add RDBMS_URI to your environment\n  '),t.k0s()())}function D(e,o){1&e&&(t.j41(0,"p"),t.EFF(1," Alternatively use "),t.j41(2,"a",29),t.EFF(3,"my script"),t.k0s(),t.EFF(4,". "),t.k0s())}function v(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,"\n    psql \"$RDBMS_URI\" -c 'SELECT 1'\n  "),t.k0s()())}function y(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2,'\n    psql "%RDBMS_URI%" -c "SELECT 1"\n  '),t.k0s()())}function M(e,o){1&e&&(t.j41(0,"span")(1,"a",30)(2,"code"),t.EFF(3,"sed"),t.k0s()(),t.EFF(4," and "),t.k0s())}function P(e,o){1&e&&(t.j41(0,"code"),t.EFF(1,"brew install hub"),t.k0s())}function A(e,o){1&e&&(t.j41(0,"span")(1,"a",31),t.EFF(2,"latest package"),t.k0s(),t.EFF(3," for your platform."),t.k0s())}function O(e,o){1&e&&(t.j41(0,"pre",4)(1,"code",6),t.EFF(2),t.k0s()()),2&e&&(t.R7$(2),t.Lme('\n    hub create organisation/"$',"{","PWD##*/","}","\" -d 'Description here'\n  "))}const x=[{path:"",component:(()=>{class e{constructor(i){this.platformPickerService=i,this.os=i.is.bind(i)}static#t=this.\u0275fac=function(a){return new(a||e)(t.rXU(p.B))};static#e=this.\u0275cmp=t.VBU({type:e,selectors:[["app-getting-started"]],decls:104,vars:15,consts:[[1,"docs-markdown","pad"],[1,"docs-markdown-h5"],[1,"docs-markdown-p"],["id","step-0-install-build-dependencies",1,"docs-header-link","docs-markdown-h3"],[1,"docs-markdown-pre"],["id","step-1-install-nodejs",1,"docs-header-link","docs-markdown-h3"],[1,"lang-bash","docs-markdown-code"],["id","step-2-install-redis",1,"docs-header-link","docs-markdown-h3"],["id","step-3-install-postgres",1,"docs-header-link","docs-markdown-h3"],["id","step-4-install-android",1,"docs-header-link","docs-markdown-h3"],["href","https://developer.android.com/studio/install.html",1,"docs-markdown-a"],["id","step-5-install-global-nodejs-packages",1,"docs-header-link","docs-markdown-h3"],["id","step-6-development-backend",1,"docs-header-link","docs-markdown-h3"],["id","step-7-angular-frontend",1,"docs-header-link","docs-markdown-h3"],["id","step-8-android",1,"docs-header-link","docs-markdown-h3"],["id","step-9-rebranding",1,"docs-header-link","docs-markdown-h3"],["href","https://github.com/sharkdp/fd"],["href","https://hub.github.com"],["href","https://developer.apple.com/downloads"],[1,"docs-guide-content"],["href","https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15",1,"docs-markdown-a"],["href","https://git-scm.com/download/win",1,"docs-markdown-a"],["href","https://nodejs.org/en/download/",1,"docs-markdown-a"],["href","https://github.com/MicrosoftArchive/redis/releases",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/linux/ubuntu/",1,"docs-markdown-a"],["href","https://www.postgresql.org/download/macosx/",1,"docs-markdown-a"],[1,"http://www.enterprisedb.com/products/pgdownload.do#macosx"],["href","https://technet.microsoft.com/en-us/library/cc947813(v=ws.10).aspx",1,"docs-markdown-a"],[1,"lang-batch","docs-markdown-code"],["href","https://github.com/offscale/offsh-postgres",1,"docs-markdown-a"],["href","https://chocolatey.org/packages/sed"],["href","https://github.com/github/hub/releases"]],template:function(a,n){1&a&&(t.j41(0,"div",0)(1,"h5",1),t.EFF(2," This guides you to setting up your computer to run all my scaffolds. "),t.k0s(),t.DNE(3,c,2,0,"p",2)(4,m,2,0)(5,F,2,0),t.j41(6,"em"),t.EFF(7," All grey background assumes you are running in an active "),t.DNE(8,u,1,0)(9,E,1,0),t.EFF(10," session "),t.k0s(),t.j41(11,"h3",3),t.EFF(12," Step 0: Install build dependencies "),t.k0s(),t.DNE(13,h,3,0,"pre",4)(14,S,5,0)(15,f,14,0),t.j41(16,"h3",5),t.EFF(17," Step 1: Install Node.js "),t.k0s(),t.DNE(18,k,3,0,"pre",4)(19,g,5,0),t.j41(20,"p",2),t.EFF(21,"Test that it installed correctly with:"),t.k0s(),t.j41(22,"pre",4)(23,"code",6),t.EFF(24,"\n    node --version\n    npm --version\n  "),t.k0s()(),t.j41(25,"h3",7),t.EFF(26," Step 2: Install Redis "),t.k0s(),t.DNE(27,_,3,0,"pre",4)(28,w,3,0)(29,j,5,0),t.j41(30,"p",2),t.EFF(31,"You can test it's installed and running with:"),t.k0s(),t.j41(32,"pre",4)(33,"code",6),t.EFF(34,"\n    redis-cli ping\n  "),t.k0s()(),t.j41(35,"p",2),t.EFF(36,"If that failed, open a new session and run this, then try the ping again:"),t.k0s(),t.j41(37,"pre",4)(38,"code",6),t.EFF(39,"\n    redis-server\n  "),t.k0s()(),t.j41(40,"h3",8),t.EFF(41," Step 3: Install and configure Postgres "),t.k0s(),t.DNE(42,C,5,0,"p",2)(43,R,8,0)(44,T,5,0)(45,b,3,0,"pre",4)(46,G,3,0)(47,D,5,0,"p"),t.j41(48,"p",2),t.EFF(49,"You can test it's installed and running with:"),t.k0s(),t.DNE(50,v,3,0,"pre",4)(51,y,3,0),t.j41(52,"h3",9),t.EFF(53," Step 4: Install Android dependencies and IDE "),t.k0s(),t.j41(54,"p",2),t.EFF(55," See "),t.j41(56,"a",10),t.EFF(57,"official install guide"),t.k0s(),t.EFF(58,". "),t.k0s(),t.j41(59,"h3",11),t.EFF(60," Step 5: Install global Node.js packages "),t.k0s(),t.j41(61,"pre",4)(62,"code",6),t.EFF(63,"\n    npm i -g bunyan typings typescript @angular/cli\n  "),t.k0s()(),t.j41(64,"h3",12),t.EFF(65," Step 6: Development backend (Node.js) "),t.k0s(),t.j41(66,"pre",4)(67,"code",6),t.EFF(68,"\n    git clone https://github.com/SamuelMarks/restify-orm-scaffold\n    cd restify-orm-scaffold\n    typings i\n    tsc\n    npm start\n  "),t.k0s()(),t.j41(69,"h3",13),t.EFF(70," Step 7: Angular frontend (web) "),t.k0s(),t.j41(71,"pre",4)(72,"code",6),t.EFF(73,"\n    git clone https://github.com/SamuelMarks/ng-material-scaffold\n    cd ng-material-scaffold\n    npm i\n    npm start\n  "),t.k0s()(),t.j41(74,"h3",14),t.EFF(75," Step 8: Android "),t.k0s(),t.j41(76,"pre",4)(77,"code",6),t.EFF(78,"\n    git clone https://github.com/SamuelMarks/android-auth-scaffold\n  "),t.k0s()(),t.j41(79,"p",2),t.EFF(80," Now open that in Android Studio; build and run it. "),t.k0s(),t.j41(81,"h3",15),t.EFF(82," Step 9: Branding "),t.k0s(),t.j41(83,"p",2),t.EFF(84,"Now is a good time to rename everything. Close all open windows, and let's begin."),t.k0s(),t.j41(85,"p",2),t.EFF(86,"Install "),t.DNE(87,M,5,0,"span"),t.j41(88,"a",16)(89,"code"),t.EFF(90,"fd"),t.k0s()(),t.EFF(91,". Then within each of the repo directories, or from a parent directory, run:"),t.k0s(),t.j41(92,"pre",4)(93,"code",6),t.EFF(94),t.k0s()(),t.j41(95,"p",2),t.EFF(96,"You will need likely want to update descriptions and add DVCS repositories also. Install "),t.j41(97,"a",17)(98,"code"),t.EFF(99,"hub"),t.k0s()(),t.EFF(100," with "),t.DNE(101,P,2,0,"code")(102,A,4,0),t.k0s(),t.DNE(103,O,3,2,"pre",4),t.k0s()),2&a&&(t.R7$(3),t.vxM(3,n.os("Linux")?3:n.os("macOS")?4:n.os("Windows")?5:-1),t.R7$(5),t.vxM(8,n.os("Windows")?8:n.os("macOS")||n.os("Linux")?9:-1),t.R7$(5),t.vxM(13,n.os("Linux")?13:n.os("macOS")?14:n.os("Windows")?15:-1),t.R7$(5),t.vxM(18,n.os("Linux")||n.os("macOS")?18:n.os("Windows")?19:-1),t.R7$(9),t.vxM(27,n.os("Linux")?27:n.os("macOS")?28:n.os("Windows")?29:-1),t.R7$(15),t.vxM(42,n.os("Linux")?42:n.os("macOS")?43:n.os("Windows")?44:-1),t.R7$(3),t.vxM(45,n.os("Linux")||n.os("macOS")?45:n.os("Windows")?46:-1),t.R7$(2),t.vxM(47,n.os("Linux")||n.os("macOS")?47:-1),t.R7$(3),t.vxM(50,n.os("Linux")||n.os("macOS")?50:n.os("Windows")?51:-1),t.R7$(37),t.vxM(87,n.os("Windows")?87:-1),t.R7$(7),t.E5c("\n    fd -t f -exec sed -i 's/ng-material-scaffold/projectname/g' ","{}"," \\;\n    fd -t f -exec sed -i 's/NgMaterialScaffold/projectname/g' ","{}"," \\;\n\n    fd -t f -exec sed -i 's/restify-orm-scaffold/projectname/g' ","{}"," \\;\n  "),t.R7$(7),t.vxM(101,n.os("macOS")?101:n.os("Linux")?102:-1),t.R7$(2),t.vxM(103,n.os("Linux")||n.os("macOS")?103:-1))},styles:[".pad[_ngcontent-%COMP%]{padding:0 3em}"]})}return e})()}];let B=(()=>{class e{static#t=this.\u0275fac=function(a){return new(a||e)};static#e=this.\u0275mod=t.$C({type:e});static#n=this.\u0275inj=t.G2t({imports:[l.MD,r.iI,r.iI.forChild(x)]})}return e})()}}]);